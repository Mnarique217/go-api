package main

import (
	"context"
	"fmt"
	"log"
	"time"

	pb "github.com/Mnarique217/go-api/booksapp"
	"google.golang.org/grpc"
)

func main() {
	address := "localhost:8080" //os.Getenv("ADDRESS")
	conn, err := grpc.Dial(address, grpc.WithInsecure())
	if err != nil {
		log.Fatalf("did not connect: %v", err)
	}
	defer conn.Close()
	c := pb.NewBookInfoClient(conn)
	/*ADD*/
	actionPerformed("ADD BOOK")
	ctx, cancel := context.WithTimeout(context.Background(), time.Second)
	defer cancel()
	r, err := c.AddBook(ctx, &pb.Book{
		Id:        "1",
		Title:     "Operating System Concepts",
		Edition:   "9th",
		Copyright: "2012",
		Language:  "ENGLISH",
		Pages:     "976",
		Author:    "Abraham Silberschatz",
		Publisher: "John Wiley & Sons"})
	if err != nil {
		log.Fatalf("Could not add book: %v", err)
	}
	fmt.Println("Result is: ")
	fmt.Println(r.String())

	/*UPDATE*/
	actionPerformed("UPDATE BOOK")
	bookData := &pb.Book{
		Id:        "1",
		Title:     "UPDATED TITLE",
		Edition:   "10th",
		Copyright: "2052",
		Language:  "ESPANOL",
		Pages:     "800",
		Author:    "MANRIQUE",
		Publisher: "MANRIQUE"}
	idToUpdate := &pb.BookID{Value: r.Value}
	bkUpdate := &pb.BookUpdate{Update: bookData, Id: idToUpdate}

	bookResult, err := c.UpdateBook(ctx, bkUpdate)
	if err != nil {
		log.Fatalf("Could not get book: %v", err)
	}
	fmt.Println("Result is: ")
	fmt.Println(bookResult.String())

	/*GET*/
	actionPerformed("GET BOOK")
	book1, err := c.GetBook(ctx, &pb.BookID{Value: r.Value})
	if err != nil {
		log.Fatalf("Could not get book: %v", err)
	}
	fmt.Println("Result is: ")
	fmt.Println(book1.String())

	/*DELETE*/
	actionPerformed("DELETE BOOK")
	result, err := c.DeleteBook(ctx, &pb.BookID{Value: r.Value})
	if err != nil {
		log.Fatalf("Could not delete the book: %v", err)
	}
	fmt.Println("Result is: ")
	fmt.Println(result.String())

}

func actionPerformed(title string) {
	fmt.Println("")
	fmt.Println("=======================================")
	fmt.Println("               ", title, "             ")
	fmt.Println("=======================================")
}
